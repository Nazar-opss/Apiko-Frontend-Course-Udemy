{"mappings":"ACAA,6HAA6H;ACmD7H,IAAA,EAAe,IAnDf,MACE,aAAc,CACZ,IAAI,CAAC,GAAG,CAAG,6CACX,IAAI,CAAC,OAAO,CAAG,CAAE,eAAgB,kBAAmB,CACtD,CAEA,MAAM,UAAW,CACf,IAAM,EAAM,MAAM,MAAM,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAE,CAClD,OAAQ,OACR,QAAS,IAAI,CAAC,OAAO,CACrB,sGAAsG;AACtG,KAAM,KAAK,SAAS,CAAC,CACnB,KAAQ,mBACR,MAAS,yBACT,SAAY,WACZ,IAAO,EACT,EACF,GACM,EAAO,MAAM,EAAI,IAAI,EAC3B,CAAA,IAAI,CAAC,OAAO,CAAC,aAAa,CAAG,CAAC,OAAO,EAAE,EAAK,KAAK,CAAC,CAAC,AACrD,CAEA,MAAM,OAAQ,CACZ,IAAM,EAAM,MAAM,MAAM,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAE,CAC/C,OAAQ,OACR,QAAS,IAAI,CAAC,OAAO,CACrB,2FAA2F;AAC3F,KAAM,KAAK,SAAS,CAAC,CACnB,MAAS,yBACT,SAAY,UACd,EACF,GACM,EAAO,MAAM,EAAI,IAAI,EAC3B,CAAA,IAAI,CAAC,OAAO,CAAC,aAAa,CAAG,CAAC,OAAO,EAAE,EAAK,KAAK,CAAC,CAAC,AACrD,CAEA,4DAA4D;AAC5D,MAAM,mBAAoB,CAE1B,CAEA,0EAA0E;AAC1E,MAAM,YAAY,CAAe,CAAE,CAAC,CAEpC,kDAAkD;AAClD,MAAM,eAAe,CAAE,CAAE,CAAC,CAE1B,kDAAkD;AAClD,MAAM,eAAe,CAAE,CAAE,CAAS,CAAE,CAAC,CACvC,CD/CA,CAAA,OAAO,KAAK,CAAG,IAEC,IAAI,AAAA,EAAI,KAAK,CAI7B,4HAA4H;AAC5H,OAAO,QAAQ,CAAG,KAChB,iBAAiB;AACnB,EAEA,8DAA8D;AAC9D,OAAO,OAAO,CAAG,KACf,IAAM,EAAQ,SAAS,cAAc,CAAC,mBAElB,CAAA,EAAM,KAAK,CAE/B,iBAAiB;AAEjB,eAAe;AACf,EAAM,KAAK,CAAG,EAChB,EAEA,wHAAwH;AACxH,OAAO,UAAU,CAAG,CAAC,EAAK,KACxB,iBAAiB;AACnB,EAEA,2EAA2E;AAC3E,OAAO,UAAU,CAAG,AAAC,IACnB,iBAAiB;AACnB,C,4D","sources":["<anon>","src/index.js","src/api.js"],"sourcesContent":["// Написати функцію яка залогінює користувача, фетчить список ToDo елементів та добавляє їх на фронт (нові мають бути зверху)\nclass $96e14f2a7c3555e4$var$Api {\n    constructor(){\n        this.url = \"https://api-nodejs-todolist.herokuapp.com/\";\n        this.headers = {\n            \"Content-Type\": \"application/json\"\n        };\n    }\n    async register() {\n        const res = await fetch(`${this.url}user/register`, {\n            method: \"POST\",\n            headers: this.headers,\n            // Тут потрібно використовувати ваш name, email, age та password відповідно до прикладу у документації\n            body: JSON.stringify({\n                \"name\": \"Muhammad Nur Ali\",\n                \"email\": \"muh.nurali43@gmail.com\",\n                \"password\": \"12345678\",\n                \"age\": 20\n            })\n        });\n        const data = await res.json();\n        this.headers.Authorization = `Bearer ${data.token}`;\n    }\n    async login() {\n        const res = await fetch(`${this.url}user/login`, {\n            method: \"POST\",\n            headers: this.headers,\n            // Тут потрібно використовувати ваш email та password відповідно до прикладу у документації\n            body: JSON.stringify({\n                \"email\": \"muh.nurali43@gmail.com\",\n                \"password\": \"12345678\"\n            })\n        });\n        const data = await res.json();\n        this.headers.Authorization = `Bearer ${data.token}`;\n    }\n    // Написати функцію яка повертає масив ToDo елементів із API\n    async fetchAllTodoItems() {}\n    // Написати функцію яка відсилає ToDo елемент до API та повертає результат\n    async addTodoItem(todoDescription) {}\n    // Написати функцію яка видаляє ToDo елемент з API\n    async removeTodoItem(id) {}\n    // Написати функцію яка оновляє ToDo елемент у API\n    async updateTodoItem(id, completed) {}\n}\nvar $96e14f2a7c3555e4$export$2e2bcd8739ae039 = new $96e14f2a7c3555e4$var$Api();\n\n\nwindow.login = ()=>{\n    // Писати код тут\n    let newUser = new (0, $96e14f2a7c3555e4$export$2e2bcd8739ae039).login();\n    return newUser;\n};\n// Написати функцію яка реєструє користувача, фетчить список ToDo елементів та добавляє їх на фронт (нові мають бути зверху)\nwindow.register = ()=>{\n// Писати код тут\n};\n// Написати функцію яка добавляє ToDo елемент до API та фронта\nwindow.addTodo = ()=>{\n    const input = document.getElementById(\"descriptionInput\");\n    // Отримуємо значення із інпута\n    const description = input.value;\n    // Писати код тут\n    // Очищає інпут\n    input.value = \"\";\n};\n// Написати функцію(приймає id та completed - поточний стан ToDo елемента) яка модифікує Todo елемента на API та фронті.\nwindow.modifyTodo = (_id, completed)=>{\n// Писати код тут\n};\n// Написати функцію(приймає id ) яка видаляє ToDo елемент із API та фронта.\nwindow.removeTodo = (_id)=>{\n// Писати код тут\n};\n\n\n//# sourceMappingURL=index.ea6b27f6.js.map\n","// Написати функцію яка залогінює користувача, фетчить список ToDo елементів та добавляє їх на фронт (нові мають бути зверху)\nimport Api from \"./api\";\nwindow.login = () => {\n  // Писати код тут\n  let newUser = new Api.login();\n  return newUser;\n};\n\n// Написати функцію яка реєструє користувача, фетчить список ToDo елементів та добавляє їх на фронт (нові мають бути зверху)\nwindow.register = () => {\n  // Писати код тут\n};\n\n// Написати функцію яка добавляє ToDo елемент до API та фронта\nwindow.addTodo = () => {\n  const input = document.getElementById(\"descriptionInput\");\n  // Отримуємо значення із інпута\n  const description = input.value;\n\n  // Писати код тут\n\n  // Очищає інпут\n  input.value = \"\";\n};\n\n// Написати функцію(приймає id та completed - поточний стан ToDo елемента) яка модифікує Todo елемента на API та фронті.\nwindow.modifyTodo = (_id, completed) => {\n  // Писати код тут\n};\n\n// Написати функцію(приймає id ) яка видаляє ToDo елемент із API та фронта.\nwindow.removeTodo = (_id) => {\n  // Писати код тут\n};\n","class Api {\n  constructor() {\n    this.url = \"https://api-nodejs-todolist.herokuapp.com/\";\n    this.headers = { \"Content-Type\": \"application/json\" };\n  }\n\n  async register() {\n    const res = await fetch(`${this.url}user/register`, {\n      method: \"POST\",\n      headers: this.headers,\n      // Тут потрібно використовувати ваш name, email, age та password відповідно до прикладу у документації\n      body: JSON.stringify({\n        \"name\": \"Muhammad Nur Ali\",\n        \"email\": \"muh.nurali43@gmail.com\",\n        \"password\": \"12345678\",\n        \"age\": 20\n      })\n    });\n    const data = await res.json();\n    this.headers.Authorization = `Bearer ${data.token}`;\n  }\n\n  async login() {\n    const res = await fetch(`${this.url}user/login`, {\n      method: \"POST\",\n      headers: this.headers,\n      // Тут потрібно використовувати ваш email та password відповідно до прикладу у документації\n      body: JSON.stringify({\n        \"email\": \"muh.nurali43@gmail.com\",\n        \"password\": \"12345678\"\n      })\n    });\n    const data = await res.json();\n    this.headers.Authorization = `Bearer ${data.token}`;\n  }\n\n  // Написати функцію яка повертає масив ToDo елементів із API\n  async fetchAllTodoItems() {\n    \n  }\n\n  // Написати функцію яка відсилає ToDo елемент до API та повертає результат\n  async addTodoItem(todoDescription) {}\n\n  // Написати функцію яка видаляє ToDo елемент з API\n  async removeTodoItem(id) {}\n\n  // Написати функцію яка оновляє ToDo елемент у API\n  async updateTodoItem(id, completed) {}\n}\n\nexport default new Api();\n"],"names":["$96e14f2a7c3555e4$export$2e2bcd8739ae039","constructor","url","headers","register","res","fetch","method","body","JSON","stringify","data","json","Authorization","token","login","fetchAllTodoItems","addTodoItem","todoDescription","removeTodoItem","id","updateTodoItem","completed","window","addTodo","input","document","getElementById","value","modifyTodo","_id","removeTodo"],"version":3,"file":"index.ea6b27f6.js.map"}